{"version":3,"sources":["App.js","index.js"],"names":["useStyles","makeStyles","card","marginTop","marginBottom","fontWeight","cardContent","paddingBottom","cardActions","padding","WebkitColumnSpan","App","classes","useState","joke","cat","state","setState","query","setQuery","useEffect","getResults","fetchData","a","axios","get","then","res","console","log","data","result","value","className","CssBaseline","Container","Typography","variant","align","onSubmit","e","preventDefault","Input","type","onChange","target","Button","Card","CardContent","CardActions","style","color","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8TAeMA,EAAYC,YAAW,CACzBC,KAAM,CACFC,UAAW,GACXC,aAAc,GACdC,WAAY,IAEhBC,YAAa,CACTC,cAAe,IAGnBC,YAAY,CACRC,QAAS,OACTC,iBAAkB,aAkFXC,MA9Ef,WAEI,IAAMC,EAAUZ,IAEhB,EAA0Ba,mBAAS,CAC/BC,KAAM,GACNC,IAAK,KAFT,mBAAOC,EAAP,KAAcC,EAAd,KAIA,EAA0BJ,mBAAS,QAAnC,mBAAOK,EAAP,KAAcC,EAAd,KAEAC,qBAAU,WACNC,MACF,IAEFD,qBAAW,WACPE,MAGF,IACF,IASMD,EAAU,uCAAG,sBAAAE,EAAA,sEACFC,IACRC,IADQ,wDAC6CP,IACrDQ,MAAK,SAACC,GAAD,OAAQC,QAAQC,IAAIF,EAAIG,KAAKC,WAHxB,mFAAH,qDAOVT,EAAS,uCAAG,4BAAAC,EAAA,sEACOC,IAAMC,IAAI,2CADjB,OACRM,EADQ,OAIdd,EAAS,2BACFD,GADC,IAEJF,KAAMiB,EAAOD,KAAKE,MAClBjB,IAAKgB,EAAOD,KAAKC,UAPP,2CAAH,qDAUjB,OACE,sBAAKE,UAAU,MAAf,UACI,cAACC,EAAA,EAAD,IACA,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAYC,QAAU,KAAKC,MAAM,SAAjC,gCAGA,uBAAMC,SA5BO,SAACC,GAClBA,EAAEC,iBACFpB,KA0BI,UACI,cAACqB,EAAA,EAAD,CAAOC,KAAK,OACLC,SAAU,SAAAJ,GAAC,OAAIrB,EAASqB,EAAEK,OAAOb,QACjCA,MAAOd,IAEd,cAAC4B,EAAA,EAAD,CAAQH,KAAK,SAAb,uBAED,cAACI,EAAA,EAAD,CAAMd,UAAWrB,EAAQV,KAAzB,SACI,cAAC8C,EAAA,EAAD,UACC,cAACZ,EAAA,EAAD,UAAapB,EAAMF,WAI3B,cAACmC,EAAA,EAAD,CAAahB,UAAWrB,EAAQJ,YAAhC,SACI,cAACsC,EAAA,EAAD,CAAQT,QAAQ,YACRa,MAAO,CAAC/C,UAAW,GAAIC,aAAc,IACrC+C,MAAM,UACNC,QAAS,kBAAiBpC,EAAMF,UAhDhDQ,KA6CQ,kCC7FhB+B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.435c1ed7.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport './App.css'\nimport {\n    Typography,\n    Container,\n    CssBaseline,\n    Card,\n    CardContent,\n    makeStyles,\n    Button,\n    CardActions, Input,\n} from \"@material-ui/core\";\nimport axios from \"axios\";\n\n\nconst useStyles = makeStyles({\n    card: {\n        marginTop: 20,\n        marginBottom: 20,\n        fontWeight: 20\n    },\n    cardContent: {\n        paddingBottom: 10,\n\n    },\n    cardActions:{\n        padding: '40px',\n        WebkitColumnSpan: \"inherit\"\n    }\n})\n\nfunction App() {\n\n    const classes = useStyles();\n\n    const [state, setState] = useState({\n        joke: '',\n        cat: '',\n    });\n    const [query, setQuery] = useState('food')\n\n    useEffect(() => {\n        getResults();\n    },[]);\n\n    useEffect( () => {\n        fetchData();\n\n\n    },[]);\n    const randomJoke = () => {\n     // console.log('random joke', state)\n        fetchData();\n    }\n\n    const handleSearch = (e) =>{\n        e.preventDefault()\n        getResults();\n    }\n    const getResults = async () => {\n        return await axios\n            .get(`https://api.chucknorris.io/jokes/search?query=${query}`)\n            .then((res) =>console.log(res.data.result))\n    };\n\n\n    const fetchData = async () => {\n        const result = await axios.get('https://api.chucknorris.io/jokes/random')\n        // console.log(result.data.value);\n\n        setState({\n            ...state,\n            joke: result.data.value,\n            cat: result.data.result\n        });\n    }\n  return (\n    <div className=\"App\">\n        <CssBaseline/>\n        <Container>\n            <Typography variant = \"h1\" align=\"center\">\n                Chuck Norris Jokes\n            </Typography>\n            <form onSubmit={handleSearch}>\n                <Input type=\"text\"\n                       onChange={e => setQuery(e.target.value)}\n                       value={query}\n                />\n                <Button type=\"submit\">Search</Button>\n            </form>\n               <Card className={classes.card}>\n                   <CardContent>\n                    <Typography>{state.joke}</Typography>\n\n                   </CardContent>\n               </Card>\n            <CardActions className={classes.cardActions}>\n                <Button variant='contained'\n                        style={{marginTop: 20, marginBottom: 20}}\n                        color='primary'\n                        onClick={() => randomJoke(state.joke)}>\n                    Random joke\n                </Button>\n            </CardActions>\n        </Container>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}